CC = /usr/bin/clang
CFLAGS = -Wall -Wextra -std=c17 -I/opt/homebrew/include -I"${workspaceFolder}/**" -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks
LDFLAGS = -L/opt/homebrew/lib -lSDL2
SRC = main.c matrix.c vector.c 
OBJ = $(SRC:.c=.o)
EXEC = bin/engine

# Default target: Builds and runs the program
all: build
	@./$(EXEC)

# Build target: Just compiles the program
build: $(EXEC)

# Create the bin directory if it doesn't exist
bin:
	mkdir -p bin

# Link the final executable
$(EXEC): bin $(OBJ)
	$(CC) $(OBJ) $(LDFLAGS) -o $(EXEC)

# Compile object files
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Clean: Remove the executable and any object files
clean:
	rm -f $(OBJ) $(EXEC)

.PHONY: all build clean
